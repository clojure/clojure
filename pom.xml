<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.clojure</groupId>
  <artifactId>clojure</artifactId>
  <name>clojure</name>
  <packaging>jar</packaging>
  <version>1.9.0-master-SNAPSHOT</version>

  <url>http://clojure.org/</url>
  <description>Clojure core environment and runtime library.</description>

  <developers>
    <developer>
      <name>Rich Hickey</name>
      <email>richhickey@gmail.com</email>
      <timezone>-5</timezone>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>Eclipse Public License 1.0</name>
      <url>http://opensource.org/licenses/eclipse-1.0.php</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <scm>
    <connection>scm:git:git@github.com:clojure/clojure.git</connection>
    <developerConnection>scm:git:git@github.com:clojure/clojure.git</developerConnection>
    <url>git@github.com:clojure/clojure.git</url>
  </scm>

  <properties>
    <directlinking>true</directlinking>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.jsr166-mirror</groupId>
      <artifactId>jsr166y</artifactId>
      <version>1.7.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>test.generative</artifactId>
      <version>0.5.2</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.clojure</groupId>
          <artifactId>clojure</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>test.check</artifactId>
      <version>0.9.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.clojure</groupId>
          <artifactId>clojure</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
	<directory>src/resources</directory>
	<filtering>true</filtering>
      </resource>
      <resource>
	<directory>src/clj</directory>
      </resource>
    </resources>
    <testSourceDirectory>test/java</testSourceDirectory>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>2.3.2</version>
	<configuration>
	  <source>1.6</source>
	  <target>1.6</target>
	  <encoding>${project.build.sourceEncoding}</encoding>
	</configuration>
      </plugin>
      <plugin>
	<artifactId>maven-antrun-plugin</artifactId>
	<version>1.6</version>
	<executions>
	  <execution>
	    <id>clojure-compile</id>
	    <phase>compile</phase>
	    <goals>
	      <goal>run</goal>
	    </goals>
	    <configuration>
	      <target>
                <property name="maven.compile.classpath" refid="maven.compile.classpath" />
		<ant target="compile-clojure" />
	      </target>
	    </configuration>
	  </execution>
	  <execution>
	    <id>clojure-test</id>
	    <phase>test</phase>
	    <goals>
	      <goal>run</goal>
	    </goals>
	    <configuration>
	      <target>
                <property name="maven.test.classpath" refid="maven.test.classpath" />
		<ant target="test" />
	      </target>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>add-clojure-source-dirs</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
		<source>src/jvm</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
	<artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
	<executions>
	  <execution>
	    <id>clojure-slim-jar</id>
	    <phase>package</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	    <configuration>
	      <descriptors>
		<descriptor>src/assembly/slim.xml</descriptor>
	      </descriptors>
	      <archive>
		<manifest>
		  <mainClass>clojure.main</mainClass>
		</manifest>
	      </archive>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<artifactId>maven-jar-plugin</artifactId>
	<version>2.3.1</version>
	<configuration>
	  <archive>
	    <manifest>
	      <mainClass>clojure.main</mainClass>
	    </manifest>
	  </archive>
	</configuration>
      </plugin>
      <plugin>
	<artifactId>maven-source-plugin</artifactId>
	<version>2.1.2</version>
	<executions>
	  <execution>
	    <id>attach-sources</id>
	    <phase>package</phase>
	    <goals>
	      <goal>jar</goal>
	    </goals>
            <configuration>
              <excludes>
                <exclude>clojure/version.properties</exclude>
              </excludes>
            </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<!-- do not push SCM changes to upstream repository;
	     prevents pushing tags/commits for failed releases;
	     instead, push SCM changes in Hudson configuration -->
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-release-plugin</artifactId>
	<version>2.1</version>
	<configuration>
	  <pushChanges>false</pushChanges>
	  <localCheckout>true</localCheckout>
	</configuration>
      </plugin>
      <plugin>
	<!-- disable the Surefire testing plugin -->
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>2.6</version>
	<configuration>
	  <skip>true</skip>
	</configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Use "mvn -Ptest-direct" or "mvn -Ptest-no-direct" to choose testing with direct linking -->
    <profile>
      <id>test-direct</id>
      <properties>
        <directlinking>true</directlinking>
      </properties>
    </profile>
    <profile>
      <id>test-no-direct</id>
      <properties>
        <directlinking>false</directlinking>
      </properties>
    </profile>
    <profile>
      <!-- "mvn -Pdistribution package" builds a .zip file -->
      <id>distribution</id>
      <build>
	<plugins>
	  <plugin>
	    <artifactId>maven-assembly-plugin</artifactId>
	    <version>2.2</version>
	    <executions>
	      <execution>
		<id>clojure-distribution</id>
		<phase>package</phase>
		<goals>
		  <goal>single</goal>
		</goals>
		<configuration>
		  <appendAssemblyId>false</appendAssemblyId>
		  <descriptors>
		    <descriptor>src/assembly/distribution.xml</descriptor>
		  </descriptors>
		</configuration>
	      </execution>
	    </executions>
	  </plugin>
	</plugins>
      </build>
    </profile>
    <profile>
      <id>sonatype-oss-release</id>
      <!-- This profile is enabled automatically by the Sonatype
           oss-parent POM when invoking the Maven Release Plugin -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.7</version>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.4.4</version>
            <executions>
              <execution>
                <id>default-deploy</id>
                <phase>deploy</phase>
                <!-- By default, this is the phase deploy goal will bind to -->
                <goals>
                  <goal>deploy</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- The Base URL of Nexus instance where we want to stage -->
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <!-- The server "id" element from settings to use authentication from -->
              <serverId>sonatype-nexus-staging</serverId>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
